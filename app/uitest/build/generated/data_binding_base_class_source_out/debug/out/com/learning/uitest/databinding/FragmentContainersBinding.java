// Generated by view binder compiler. Do not edit!
package com.learning.uitest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.tabs.TabLayout;
import com.learning.uitest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentContainersBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CollapsingToolbarLayout ctl;

  @NonNull
  public final FragmentContainerView fragmentContainerView2;

  @NonNull
  public final MaterialToolbar materialToolbar;

  @NonNull
  public final TabLayout myTabLayout;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final SearchView view3;

  @NonNull
  public final View view4;

  @NonNull
  public final ViewStub viewStub;

  private FragmentContainersBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CollapsingToolbarLayout ctl, @NonNull FragmentContainerView fragmentContainerView2,
      @NonNull MaterialToolbar materialToolbar, @NonNull TabLayout myTabLayout,
      @NonNull Spinner spinner, @NonNull Toolbar toolbar, @NonNull SearchView view3,
      @NonNull View view4, @NonNull ViewStub viewStub) {
    this.rootView = rootView;
    this.ctl = ctl;
    this.fragmentContainerView2 = fragmentContainerView2;
    this.materialToolbar = materialToolbar;
    this.myTabLayout = myTabLayout;
    this.spinner = spinner;
    this.toolbar = toolbar;
    this.view3 = view3;
    this.view4 = view4;
    this.viewStub = viewStub;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentContainersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentContainersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_containers, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentContainersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ctl;
      CollapsingToolbarLayout ctl = ViewBindings.findChildViewById(rootView, id);
      if (ctl == null) {
        break missingId;
      }

      id = R.id.fragmentContainerView2;
      FragmentContainerView fragmentContainerView2 = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainerView2 == null) {
        break missingId;
      }

      id = R.id.materialToolbar;
      MaterialToolbar materialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (materialToolbar == null) {
        break missingId;
      }

      id = R.id.myTabLayout;
      TabLayout myTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (myTabLayout == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.view3;
      SearchView view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      id = R.id.viewStub;
      ViewStub viewStub = ViewBindings.findChildViewById(rootView, id);
      if (viewStub == null) {
        break missingId;
      }

      return new FragmentContainersBinding((CoordinatorLayout) rootView, ctl,
          fragmentContainerView2, materialToolbar, myTabLayout, spinner, toolbar, view3, view4,
          viewStub);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
