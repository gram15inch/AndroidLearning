// Generated by view binder compiler. Do not edit!
package com.learning.uitest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.CheckedTextView;
import android.widget.EditText;
import android.widget.MultiAutoCompleteTextView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.learning.uitest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTextBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AutoCompleteTextView autoCompleteTextView;

  @NonNull
  public final CheckedTextView checkedTextView;

  @NonNull
  public final EditText editTextDate;

  @NonNull
  public final EditText editTextNumber;

  @NonNull
  public final EditText editTextNumberDecimal;

  @NonNull
  public final EditText editTextNumberPassword;

  @NonNull
  public final EditText editTextNumberSigned;

  @NonNull
  public final EditText editTextPhone;

  @NonNull
  public final EditText editTextTextEmailAddress;

  @NonNull
  public final EditText editTextTextMultiLine;

  @NonNull
  public final EditText editTextTextPassword;

  @NonNull
  public final EditText editTextTextPersonName;

  @NonNull
  public final EditText editTextTextPostalAddress;

  @NonNull
  public final EditText editTextTime;

  @NonNull
  public final MultiAutoCompleteTextView multiAutoCompleteTextView;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextView textView;

  private FragmentTextBinding(@NonNull ConstraintLayout rootView,
      @NonNull AutoCompleteTextView autoCompleteTextView, @NonNull CheckedTextView checkedTextView,
      @NonNull EditText editTextDate, @NonNull EditText editTextNumber,
      @NonNull EditText editTextNumberDecimal, @NonNull EditText editTextNumberPassword,
      @NonNull EditText editTextNumberSigned, @NonNull EditText editTextPhone,
      @NonNull EditText editTextTextEmailAddress, @NonNull EditText editTextTextMultiLine,
      @NonNull EditText editTextTextPassword, @NonNull EditText editTextTextPersonName,
      @NonNull EditText editTextTextPostalAddress, @NonNull EditText editTextTime,
      @NonNull MultiAutoCompleteTextView multiAutoCompleteTextView,
      @NonNull TextInputLayout textInputLayout, @NonNull TextView textView) {
    this.rootView = rootView;
    this.autoCompleteTextView = autoCompleteTextView;
    this.checkedTextView = checkedTextView;
    this.editTextDate = editTextDate;
    this.editTextNumber = editTextNumber;
    this.editTextNumberDecimal = editTextNumberDecimal;
    this.editTextNumberPassword = editTextNumberPassword;
    this.editTextNumberSigned = editTextNumberSigned;
    this.editTextPhone = editTextPhone;
    this.editTextTextEmailAddress = editTextTextEmailAddress;
    this.editTextTextMultiLine = editTextTextMultiLine;
    this.editTextTextPassword = editTextTextPassword;
    this.editTextTextPersonName = editTextTextPersonName;
    this.editTextTextPostalAddress = editTextTextPostalAddress;
    this.editTextTime = editTextTime;
    this.multiAutoCompleteTextView = multiAutoCompleteTextView;
    this.textInputLayout = textInputLayout;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTextBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTextBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_text, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTextBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoCompleteTextView;
      AutoCompleteTextView autoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteTextView == null) {
        break missingId;
      }

      id = R.id.checkedTextView;
      CheckedTextView checkedTextView = ViewBindings.findChildViewById(rootView, id);
      if (checkedTextView == null) {
        break missingId;
      }

      id = R.id.editTextDate;
      EditText editTextDate = ViewBindings.findChildViewById(rootView, id);
      if (editTextDate == null) {
        break missingId;
      }

      id = R.id.editTextNumber;
      EditText editTextNumber = ViewBindings.findChildViewById(rootView, id);
      if (editTextNumber == null) {
        break missingId;
      }

      id = R.id.editTextNumberDecimal;
      EditText editTextNumberDecimal = ViewBindings.findChildViewById(rootView, id);
      if (editTextNumberDecimal == null) {
        break missingId;
      }

      id = R.id.editTextNumberPassword;
      EditText editTextNumberPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextNumberPassword == null) {
        break missingId;
      }

      id = R.id.editTextNumberSigned;
      EditText editTextNumberSigned = ViewBindings.findChildViewById(rootView, id);
      if (editTextNumberSigned == null) {
        break missingId;
      }

      id = R.id.editTextPhone;
      EditText editTextPhone = ViewBindings.findChildViewById(rootView, id);
      if (editTextPhone == null) {
        break missingId;
      }

      id = R.id.editTextTextEmailAddress;
      EditText editTextTextEmailAddress = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextEmailAddress == null) {
        break missingId;
      }

      id = R.id.editTextTextMultiLine;
      EditText editTextTextMultiLine = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextMultiLine == null) {
        break missingId;
      }

      id = R.id.editTextTextPassword;
      EditText editTextTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPassword == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName;
      EditText editTextTextPersonName = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName == null) {
        break missingId;
      }

      id = R.id.editTextTextPostalAddress;
      EditText editTextTextPostalAddress = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPostalAddress == null) {
        break missingId;
      }

      id = R.id.editTextTime;
      EditText editTextTime = ViewBindings.findChildViewById(rootView, id);
      if (editTextTime == null) {
        break missingId;
      }

      id = R.id.multiAutoCompleteTextView;
      MultiAutoCompleteTextView multiAutoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (multiAutoCompleteTextView == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new FragmentTextBinding((ConstraintLayout) rootView, autoCompleteTextView,
          checkedTextView, editTextDate, editTextNumber, editTextNumberDecimal,
          editTextNumberPassword, editTextNumberSigned, editTextPhone, editTextTextEmailAddress,
          editTextTextMultiLine, editTextTextPassword, editTextTextPersonName,
          editTextTextPostalAddress, editTextTime, multiAutoCompleteTextView, textInputLayout,
          textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
