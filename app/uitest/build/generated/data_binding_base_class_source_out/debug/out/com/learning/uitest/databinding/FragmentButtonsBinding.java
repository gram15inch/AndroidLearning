// Generated by view binder compiler. Do not edit!
package com.learning.uitest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Switch;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.learning.uitest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentButtonsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button1;

  @NonNull
  public final CheckBox checkBox;

  @NonNull
  public final CheckBox checkBox2;

  @NonNull
  public final Chip chip;

  @NonNull
  public final Chip chip2;

  @NonNull
  public final Chip chip3;

  @NonNull
  public final Chip chip4;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final FloatingActionButton floatingActionButton;

  @NonNull
  public final ImageButton imageButton;

  @NonNull
  public final RadioButton radioButton0;

  @NonNull
  public final RadioButton radioButton1;

  @NonNull
  public final RadioButton radioButton2;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final Switch switch1;

  @NonNull
  public final ToggleButton toggleButton;

  private FragmentButtonsBinding(@NonNull ConstraintLayout rootView, @NonNull Button button1,
      @NonNull CheckBox checkBox, @NonNull CheckBox checkBox2, @NonNull Chip chip,
      @NonNull Chip chip2, @NonNull Chip chip3, @NonNull Chip chip4, @NonNull ChipGroup chipGroup,
      @NonNull FloatingActionButton floatingActionButton, @NonNull ImageButton imageButton,
      @NonNull RadioButton radioButton0, @NonNull RadioButton radioButton1,
      @NonNull RadioButton radioButton2, @NonNull RadioGroup radioGroup, @NonNull Switch switch1,
      @NonNull ToggleButton toggleButton) {
    this.rootView = rootView;
    this.button1 = button1;
    this.checkBox = checkBox;
    this.checkBox2 = checkBox2;
    this.chip = chip;
    this.chip2 = chip2;
    this.chip3 = chip3;
    this.chip4 = chip4;
    this.chipGroup = chipGroup;
    this.floatingActionButton = floatingActionButton;
    this.imageButton = imageButton;
    this.radioButton0 = radioButton0;
    this.radioButton1 = radioButton1;
    this.radioButton2 = radioButton2;
    this.radioGroup = radioGroup;
    this.switch1 = switch1;
    this.toggleButton = toggleButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentButtonsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentButtonsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_buttons, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentButtonsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button1;
      Button button1 = ViewBindings.findChildViewById(rootView, id);
      if (button1 == null) {
        break missingId;
      }

      id = R.id.checkBox;
      CheckBox checkBox = ViewBindings.findChildViewById(rootView, id);
      if (checkBox == null) {
        break missingId;
      }

      id = R.id.checkBox2;
      CheckBox checkBox2 = ViewBindings.findChildViewById(rootView, id);
      if (checkBox2 == null) {
        break missingId;
      }

      id = R.id.chip;
      Chip chip = ViewBindings.findChildViewById(rootView, id);
      if (chip == null) {
        break missingId;
      }

      id = R.id.chip2;
      Chip chip2 = ViewBindings.findChildViewById(rootView, id);
      if (chip2 == null) {
        break missingId;
      }

      id = R.id.chip3;
      Chip chip3 = ViewBindings.findChildViewById(rootView, id);
      if (chip3 == null) {
        break missingId;
      }

      id = R.id.chip4;
      Chip chip4 = ViewBindings.findChildViewById(rootView, id);
      if (chip4 == null) {
        break missingId;
      }

      id = R.id.chipGroup;
      ChipGroup chipGroup = ViewBindings.findChildViewById(rootView, id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.floatingActionButton;
      FloatingActionButton floatingActionButton = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButton == null) {
        break missingId;
      }

      id = R.id.imageButton;
      ImageButton imageButton = ViewBindings.findChildViewById(rootView, id);
      if (imageButton == null) {
        break missingId;
      }

      id = R.id.radioButton0;
      RadioButton radioButton0 = ViewBindings.findChildViewById(rootView, id);
      if (radioButton0 == null) {
        break missingId;
      }

      id = R.id.radioButton1;
      RadioButton radioButton1 = ViewBindings.findChildViewById(rootView, id);
      if (radioButton1 == null) {
        break missingId;
      }

      id = R.id.radioButton2;
      RadioButton radioButton2 = ViewBindings.findChildViewById(rootView, id);
      if (radioButton2 == null) {
        break missingId;
      }

      id = R.id.radioGroup;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.switch1;
      Switch switch1 = ViewBindings.findChildViewById(rootView, id);
      if (switch1 == null) {
        break missingId;
      }

      id = R.id.toggleButton;
      ToggleButton toggleButton = ViewBindings.findChildViewById(rootView, id);
      if (toggleButton == null) {
        break missingId;
      }

      return new FragmentButtonsBinding((ConstraintLayout) rootView, button1, checkBox, checkBox2,
          chip, chip2, chip3, chip4, chipGroup, floatingActionButton, imageButton, radioButton0,
          radioButton1, radioButton2, radioGroup, switch1, toggleButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
